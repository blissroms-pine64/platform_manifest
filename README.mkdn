<img src="https://raw.github.com/BlissRoms/platform_manifest/n7.0/bliss-logo.png">

Getting Started 
---------------

To get started with Android/Bliss, you'll need to get
familiar with [Git and Repo](http://source.android.com/source/using-repo.html).

To initialize your local repository using the Bliss trees, use this command:


    repo init -u https://github.com/blissroms-pine64/platform_manifest.git -b n7.1-pine64

Then to sync up:

    repo sync -j#

This(j#) depends on number of cpu cores - use just "repo sync" if you are unsure.

To build for your device.

. build/envsetup.sh

lunch `device name here`

make -j#

or make it all in one line.

. build/envsetup.sh && lunch `device name here` && make -j#

For more information on this Github Organization and how it is structured,
please [read the wiki article](http://wiki.cyanogenmod.org/w/Github_Organization)

***

Using Build Script
------------------

run command  ". build.sh" and follow the command prompts.

BLISS BUILD FLAGS
-----------------

These can be added to your device trees BoardConfig.mk

`TARGET_TC_ROM := "@@"` Specify toolchain for Rom to be compiled with

`TARGET_TC_KERNEL := "@@"` Specify toolchain for kernel to be complied with.

@@= Toolchains are located in prebuilts/gcc/linux-x86 You only need to specify the end number be it 4.8-sm for 4.8 SaberMod Toolchain. This goes for both ROM and KERNEL.

LEGACY PARAMS
-------------

`BLISS_O3 := true`   run   "O3 optimizations on build"

`BLISS_GRAPHITE := true`    "run Graphite optimiations on build"

`BLISS_STRICT:= true`    "run strict aliasing"

`BLISS_KRAIT := true`    "run krait optimizations on build --- CPU specific, please verify if you can use this"

`BLISS_PIPE := true`   "This flag actually has no effect on the generated code, but it makes the compilation process faster."

