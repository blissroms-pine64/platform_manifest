<img src="https://raw.github.com/BlissRoms/platform_manifest/n7.0/bliss-logo.png">

Getting Started 
---------------

To get started with Android/Bliss, you'll need to get
familiar with [Git and Repo](http://source.android.com/source/using-repo.html).

First we will need to install the dependencies:

	sudo apt-get install -y dos2unix gcc-4.7-arm-linux-gnueabi openjdk-8-jdk python git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip mtools u-boot-tools htop iotop sysstat iftop pigz bc device-tree-compiler lunzip dosfstools
	
To initialize your local repository using the Bliss trees, use this command:

    repo init -u https://github.com/blissroms-pine64/platform_manifest.git -b n7.1-pine64

Then to sync up:

    repo sync -j#

This(j#) depends on number of cpu cores - use just "repo sync" if you are unsure.

To build for your device, first setup your build environment:

	. build/envsetup.sh

Then pick your lunch combo:

	lunch 'device name here'
	
Then use make to start the build process:

	make -j# 
	
Then when make completes, use the sdcard_image function to package up your build
For Pinebook:
	
	sdcard_image Bliss-Pinebook.img.xz pinebook
	
For Pine64/A64+:

	sdcard_image Bliss-Pine64.img.xz plus

or make it all in one line:

	. build/envsetup.sh && lunch `device name here` && make -j# && sdcard_image Bliss-Pinebook.img.xz pinebook

For more information on this Github Organization and how it is structured,
please [read the wiki article](http://wiki.cyanogenmod.org/w/Github_Organization)

***


BLISS BUILD FLAGS
-----------------

These can be added to your device trees BoardConfig.mk

`TARGET_TC_ROM := "@@"` Specify toolchain for Rom to be compiled with

`TARGET_TC_KERNEL := "@@"` Specify toolchain for kernel to be complied with.

@@= Toolchains are located in prebuilts/gcc/linux-x86 You only need to specify the end number be it 4.8-sm for 4.8 SaberMod Toolchain. This goes for both ROM and KERNEL.

LEGACY PARAMS
-------------

`BLISS_O3 := true`   run   "O3 optimizations on build"

`BLISS_GRAPHITE := true`    "run Graphite optimiations on build"

`BLISS_STRICT:= true`    "run strict aliasing"

`BLISS_KRAIT := true`    "run krait optimizations on build --- CPU specific, please verify if you can use this"

`BLISS_PIPE := true`   "This flag actually has no effect on the generated code, but it makes the compilation process faster."

